# Triggers when the game starts
on_game_start = {
	events = {
		sbl.1	# set flag: "slightly_buffed_leaders"
	}
}

# No scope, like on_game_start
# Does not run when loading MP saves due to OOS concerns
on_single_player_save_game_load = {
	events = {
		sbl.1	# set flag: "slightly_buffed_leaders"
	}
}

on_leader_level_up = {
	events = {
		sbl.2	# remove one random negative trait
		sbl.202
	}
}

# A country is created via create_country or create_rebels
# This = created country
# From = root of context where create_country/create_rebels happens
on_country_created = {
	events = {
		sbl.3	# fallen empires ruler and nodes level 10 -> 15
		sbl.101	# initialize gestalt tech_node_restore
	}
}

on_game_start_country = {
	events = {
		sbl.101	# initialize gestalt tech_node_restore
	}
}

# a new leader is created
# scope: country, from: leader
on_leader_spawned = {
	events = {
		sbl.5	# fallen empires commander level 10 -> 15
		sbl.7	# Great Khan level 10 -> 15
		sbl.9	# awakened fallen empires scientist level 10 -> 15
		sbl.10	# event leader level 10 -> 15
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		sbl.102	# Update tech_node_restore to determine the next tech weight
	}
}

# Executed as new ruler has been set
# This = Country
on_ruler_set = {
	events = {
		sbl.201
	}
}

# Executed when a ruler has been removed
# From = Previous Ruler
# This = Country
on_ruler_removed = {
	events = {
		sbl.200
	}
}

# Executed when a country activates an agenda
# THIS = country
on_agenda_finished = {
	events = {
		sbl.201
	}
}

# Executed when a country picks any tradition (including starters and finishers)
# THIS = country
on_tradition_picked = {
	events = {
		sbl.201
	}
}

# Executed just as country is changing its government, before the new one is applied
# THIS = country
on_pre_government_changed = {
	events = {
		sbl.200
	}
}

# Executed just as country is changing its government, after the new one is applied
# THIS = country
on_post_government_changed = {
	events = {
		sbl.201
	}
}